name: Deploy Infrastructure

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::061039798341:role/github-actions-plugfolio-role
          role-session-name: GitHubActionsPlugfolio
          aws-region: us-east-1

      - name: Verify S3 Bucket Configuration
        run: |
          aws s3 ls s3://plugfolio-terraform-state --region us-east-1 || { echo "Bucket plugfolio-terraform-state does not exist."; exit 1; }
          aws s3api put-bucket-versioning --bucket plugfolio-terraform-state --versioning-configuration Status=Enabled --region us-east-1 || echo "Versioning already enabled"
          aws s3api put-bucket-encryption --bucket plugfolio-terraform-state --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}' --region us-east-1 || echo "Encryption already enabled"

      - name: Determine Terraform State Key
        id: set-state-key
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "state_key=main/terraform.tfstate" >> $GITHUB_OUTPUT
          else
            echo "state_key=dev/terraform.tfstate" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Init with S3 Backend
        working-directory: ./terraform
        run: |
          terraform init \
            -backend-config="bucket=plugfolio-terraform-state" \
            -backend-config="key=${{ steps.set-state-key.outputs.state_key }}" \
            -backend-config="region=us-east-1" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=plugfolio-terraform-locks"

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
